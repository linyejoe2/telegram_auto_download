name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Extract version from tag
      id: version
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-build.txt
        
    - name: Setup Inno Setup
      run: |
        choco install innosetup -y
        
    - name: Build executable and installer
      run: |
        .\package_windows.bat
        
    - name: Verify build artifacts
      run: |
        if (Test-Path "dist\TelegramAutoDownload-*.exe") {
          Write-Output "Installer created successfully"
          Get-ChildItem "dist\TelegramAutoDownload-*.exe"
        } else {
          Write-Error "Installer not found"
          exit 1
        }
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## Changes in ${{ steps.version.outputs.VERSION }}

          Download `TelegramAutoDownload-${{ steps.version.outputs.VERSION }}.exe` and install as administrator.
          
          If you wish to build from source, see the [BUILD_GUIDE.md](https://github.com/${{ github.repository }}/blob/${{ steps.version.outputs.VERSION }}/BUILD_GUIDE.md)

          Check [ChangeLog.md](https://github.com/${{ github.repository }}/blob/${{ steps.version.outputs.VERSION }}/ChangeLog.md) for version information.
        draft: false
        prerelease: false
        
    - name: Upload Installer to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/TelegramAutoDownload-${{ steps.version.outputs.VERSION }}.exe
        asset_name: TelegramAutoDownload-${{ steps.version.outputs.VERSION }}.exe
        asset_content_type: application/x-msdownload
        
    - name: Upload Build Guide
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: BUILD_GUIDE.md
        asset_name: BUILD_GUIDE.md
        asset_content_type: text/markdown